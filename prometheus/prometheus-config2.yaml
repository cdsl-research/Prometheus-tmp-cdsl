apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
                - monitoring-master-ml:32500

    rule_files:
      - "/etc/prometheus/rules/*.yml"
        #remote_read:
        #  - url: "http://outside-prometheus-ml4:30090/api/v1/read"
        #read_recent: true

    scrape_configs:
      ##### [monitoring-target-internal]
      ## [ICMP]
      - job_name: 'Internal-ICMP-Router' #Routerオンリ
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
              - 192.168.100.1  # ASUS TUF-AX5400 (ルータ1)
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      - job_name: 'Internal-ICMP-Switch' #Swichオンリ
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
            - 192.168.100.10 #TP LINK TL-SG116E(SW-Local1)
            - 192.168.100.11 #TP LINK TL-SG116E(SW-Local3)
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      - job_name: 'Internal-ICMP-Firewall' #Farewallオンリ
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
            - 192.168.100.15 #Buffalo WSR-2533DHPL(Router to DMZ)
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      - job_name: 'Internal-ICMP-NAS' #NASオンリ
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
              - natadecoco #192.168.100.3 #Synology DS1621xs+(Natadecoco)
              - tapioca #192.168.100.5 #Synology DS1618+(Tapioca)
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      - job_name: 'Internal-ICMP-ESXi-Host' ###ESXiが入った物理機器オンリ
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
            - plum #192.168.100.21 # plum (ESXi)
            - jasmine #192.168.100.22 # jasmine (ESXi)
            - rose #192.168.100.23 # rose (ESXi)
            - lotus #192.168.100.24 # lotus (ESXi)
            - violet #192.168.100.25 # violet (ESXi)
            - mint #192.168.100.26 # mint (ESXi)
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      - job_name: 'Internal-ICMP-ESXi-Host-Core' ###ESXiが入った物理機器オンリ
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
            - 192.168.100.32 # Canele (ESXi)
            - 192.168.100.33 # Makaron (ESXi)
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      - job_name: 'Internal-ICMP-Archive' #Archiveオンリ
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
              - achive-s #192.168.100.31 #Archive server
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

            
      # Core-server(ICMP)
      - job_name: 'Internal-ICMP-Core-server' #Core-serverオンリ
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
            - 192.168.100.35 # Core-s1
            - 192.168.100.36 # Core-s2
            - 192.168.100.37 # Core-s3
            - 192.168.100.38 # Core-s4
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      ## [SSH]
      - job_name: 'Internal-SSH-NAS'
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [ssh_banner]
        static_configs:
          - targets:
            - natadecoco:22  # natadecoco (NAS)
            - tapioca:22  # tapioca (NAS)
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      - job_name: 'Internal-SSH-Archive'
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [ssh_banner]
        static_configs:
          - targets:
            - achive-s:22 # Archive server (アーカイブサーバー)
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      - job_name: 'Internal-SSH-Core'
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [ssh_banner]
        static_configs:
          - targets:
            - 192.168.100.35:22 # Core-s1
            - 192.168.100.36:22 # Core-s2
            - 192.168.100.37:22 # Core-s3
            - 192.168.100.38:22 # Core-s4
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000
     
      ## [HTTP]
      - job_name: "Internal-HTTP-ESXi"
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
            - plum #192.168.100.21 # plum (ESXi)
            - jasmine #192.168.100.22 # jasmine (ESXi)
            - rose #192.168.100.23 # rose (ESXi)
            - lotus #192.168.100.24 # lotus (ESXi)
            - violet #192.168.100.25 # violet (ESXi)
            - mint #192.168.100.26 # mint (ESXi)
            - lily #192.168.100.27 # lily (ESXi)
            - 192.168.100.32 # Canele (ESXi)
            - 192.168.100.33 # Makaron (ESXi)

        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000
      
      - job_name: "Internal-HTTP-NAS"
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
            - natadecoco  # natadecoco (NAS)
            - tapioca  # tapioca (NAS)
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000


      ### ハイパーバイザ単位の監視(完成)
      - job_name: 'Internal-ESXI_exporter' # ESXiExporter用
        scrape_interval: 30s
        static_configs:
          - targets: ['monitoring-master-ml:32700'] # Jasmine
          - targets: ['monitoring-master-ml:32702'] # Lotus
          - targets: ['monitoring-master-ml:32704'] # Mint
          - targets: ['monitoring-master-ml:32705'] # Plum
          - targets: ['monitoring-master-ml:32701'] # Rose
          - targets: ['monitoring-master-ml:32703'] # Violet
          - targets: ['monitoring-master-ml:32706'] # Lily
          - targets: ['monitoring-master-ml:32707'] # Iris
          - targets: ['monitoring-master-ml:32709'] # Canele
          - targets: ['monitoring-master-ml:32708'] # Makaron

      ### ここからNode単位(未完成)
      - job_name: 'Internal-archive-node-exporter'
        scrape_interval: 30s
        static_configs:
          - targets: ['192.168.100.31:9100']

      ### Core-serverの監視
      - job_name: 'Internal-Core-server-systemd-exporter'
        scrape_interval: 30s
        static_configs:
          - targets: ['192.168.100.35:9558']
          - targets: ['192.168.100.36:9558']
          - targets: ['192.168.100.37:9558']
          - targets: ['192.168.100.38:9558']


      ### ここからDoktorの開発環境の対象の設定
      - job_name: 'ICMP-Doktor-dev' #Core-serverオンリ
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
            - doktor-m-v2
            - doktor-worker1-v2
            - doktor-worker2-v2
            - doktor-worker3-v2
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      - job_name: 'SSH-Doktor-dev'
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [ssh_banner]
        static_configs:
          - targets:
            - doktor-m-v2:22
            - doktor-worker1-v2:22
            - doktor-worker2-v2:22
            - doktor-worker3-v2:22
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      - job_name: 'doktor-dev-node'
        scrape_interval: 30s
        static_configs:
          - targets: ['doktor-m-v2:9100']
          - targets: ['doktor-worker1-v2:9100']
          - targets: ['doktor-worker2-v2:9100']
          - targets: ['doktor-worker3-v2:9100']

      ## [HTTP]
      - job_name: "Doktor-Dev-http-page"
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
            - doktor-m-v2
            - doktor-worker1-v2
            - doktor-worker2-v2
            - doktor-worker3-v2
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: doktor-m-v2:32200

      - job_name: 'Doktor-Dev-Cadvisor'
        scrape_interval: 30s
        static_configs:
          - targets: ['doktor-m-v2:30080']

      - job_name: 'Doktor-Dev-Metrics-server'
        scrape_interval: 30s
        static_configs:
          - targets: ['doktor-m-v2:32600']


      
      ##### [monitoring-target-external]
      ## [ICMP]
      - job_name: 'External-ICMP-Router' #Routerオンリ
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
              - 192.168.201.1  # ASUS Router 11ax(ルータ2)
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      - job_name: 'External-ICMP-ESXi-Host' ###ESXiが入った物理機器オンリ
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
            - 192.168.201.2  # Iris
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      ## [HTTP]
      - job_name: "External-HTTP-ESXi"
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
            - 192.168.201.2  # Iris
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      ## ESXi(Irisに対するESXi-exporterの監視)
      - job_name: 'External-ESXI_exporter' # ESXiExporter用
        scrape_interval: 30s
        static_configs:
          - targets: ['monitoring-master-ml:32707'] # Iris
      
      ## External-Doktor-prod-icmp(ICMP)
      - job_name: 'External-ICMP-Doktor-prod' 
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
            - 192.168.201.8
            - 192.168.201.9
            - 192.168.201.10
            - 192.168.201.11
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      ## External-Doktor-prod-ssh(SSH)
      - job_name: 'External-SSH-Doktor-prod'
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [ssh_banner]
        static_configs:
          - targets:
            - 192.168.201.8:22
            - 192.168.201.9:22
            - 192.168.201.10:22
            - 192.168.201.11:22
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      ## Doktorの本番環境のノード
      - job_name: 'External-doktor-prod-node'
        scrape_interval: 30s
        static_configs:
          - targets: ['192.168.201.8:9100']
          - targets: ['192.168.201.9:9100']
          - targets: ['192.168.201.10:9100']
          - targets: ['192.168.201.11:9100']

      # OpenVPNに対する疎通確認
      - job_name: 'External-ICMP-OpenVPN'
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
              - 192.168.200.1
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: 192.168.201.8:32200

      ## [HTTP]
      - job_name: "External-Doktor-http-page"
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
            - http://192.168.201.8/
            - http://192.168.201.9/
            - http://192.168.201.10/
            - http://192.168.201.11/
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: 192.168.201.8:32200

      ## Internal-esxi-backup(ESXiのバックアップ用のVM)
      ## [ICMP]
      - job_name: 'Internal-esxi-backup-ICMP' 
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
            - 192.168.100.250
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000

      ## [SSH]
      - job_name: 'Internal-esxi-backup-SSH'
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [ssh_banner]
        static_configs:
          - targets:
            - 192.168.100.250:22
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000
      
      - job_name: 'Internal-esxi-backup-node-exporter'
        scrape_interval: 30s
        static_configs:
          - targets: ['192.168.100.250:9100']

      - job_name: 'Internal-esxi-backup-systemd-exporter'
        scrape_interval: 30s
        static_configs:
          - targets: ['192.168.100.250:9558']


      #Lidar(ラズパイ)からIrisのVMへの疎通確認
      - job_name: 'Internal-ICMP-lidar'
        scrape_interval: 10s
        metrics_path: /probe
        params:
          module: [icmp]
        static_configs:
          - targets:
            - 192.168.201.4
            - 192.168.201.6
            - 192.168.201.7
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: 192.168.100.252:9115


      #クライアントへIrisのLidarサーバーの8001, 8002番ポートからデータが送信されているかを確認
      - job_name: 'Internal-output-port-lidar'
        scrape_interval: 10s
        static_configs:
          - targets: ['192.168.100.77:9100']

      #swichbot用exporter
      - job_name: 'Internal-swichbot-exporter'
        scrape_interval: 5m
        static_configs:
          - targets: ['monitoring-master-ml:9080']


      - job_name: 'Internal_backup_pushgateway'
        scrape_interval: 30s
        static_configs:
          - targets: ['monitoring-master-ml:30040']

      - job_name: 'Internal-snmp-NAS-tapioca'
        static_configs:
          - targets:
            - 192.168.100.5:5000
        scrape_interval: 1m
        scrape_timeout: 30s
        metrics_path: /snmp
        params:
          auth: [public_v2]
          module: [linkstation]
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:31100

    

      ### monitoring systemの監視
      - job_name: 'kubernetes-nodes'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      - job_name: "service_kube-state-metrics"
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
            action: keep
            regex: kube-state-metrics
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: service

      - job_name: "daemonset_cadvisor"
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: cadvisor
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod

      # Redmineの監視(未検証)
      - job_name: "Internal-HTTP-Redmine"
        scrape_interval: 30s
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
            - http://monitoring-master-ml:32300/
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: monitoring-master-ml:30000
      
      # DNSの名前解決の監視
      - job_name: 'dns-monitoring'
        scrape_interval: 5s
        metrics_path: /probe
        relabel_configs:
          # Populate domain label with domain portion of __address__
          - source_labels: [__address__]
            regex: (.*):.*$
            replacement: $1
            target_label: domain
          # Populate instance label with dns server IP portion of __address__
          - source_labels: [__address__]
            regex: .*:(.*)$
            replacement: $1
            target_label: instance
          # Populate module URL parameter with domain portion of __address__
          # This is a parameter passed to the blackbox exporter
          - source_labels: [domain]
            target_label: __param_module
          # Populate target URL parameter with dns server IP
          - source_labels: [instance]
            target_label: __param_target
          # Populate __address__ with the address of the blackbox exporter to hit
          - target_label: __address__
            replacement: monitoring-master-ml:30000
        static_configs:
          - targets:
            - monitoring-master-ml:30000
            - core-s1:32045
            - www.google.com:8.8.8.8 # テスト

      

      # # DNSのノードの監視(途中)
      # - job_name: 'dns-nodes'
      #   scheme: https
      #   tls_config:
      #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      #   kubernetes_sd_configs:
      #     - role: node
      #   relabel_configs:
      #     - action: labelmap
      #       regex: __meta_kubernetes_node_label_(.+)
      #     - target_label: __address__
      #       replacement: kubernetes.default.svc:443
      #     - source_labels: [__meta_kubernetes_node_name]
      #       regex: (.+)
      #       target_label: __metrics_path__
      #       replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      
      # # DNSのPodの監視(途中)
      # - job_name: 'dns-pods'
      #   kubernetes_sd_configs:
      #     - role: pod
      #   relabel_configs:
      #     - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      #       action: keep
      #       regex: true
      #     - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      #       action: replace
      #       target_label: __metrics_path__
      #       regex: (.+)
      #     - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      #       action: replace
      #       regex: ([^:]+)(?::\d+)?;(\d+)
      #       replacement: $1:$2
      #       target_label: __address__
      #     - action: labelmap
      #       regex: __meta_kubernetes_pod_label_(.+)
      #     - source_labels: [__meta_kubernetes_namespace]
      #       action: replace
      #       target_label: kubernetes_namespace
      #     - source_labels: [__meta_kubernetes_pod_name]
      #       action: replace
      #       target_label: kubernetes_pod_name

      # - job_name: "service_kube-state-metrics"
      #   kubernetes_sd_configs:
      #     - role: service
      #   relabel_configs:
      #     - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
      #       action: keep
      #       regex: kube-state-metrics
      #     - action: labelmap
      #       regex: __meta_kubernetes_service_label_(.+)
      #     - source_labels: [__meta_kubernetes_namespace]
      #       action: replace
      #       target_label: namespace
      #     - source_labels: [__meta_kubernetes_service_name]
      #       action: replace
      #       target_label: service

      # - job_name: "daemonset_cadvisor"
      #   kubernetes_sd_configs:
      #     - role: pod
      #   relabel_configs:
      #     - source_labels: [__meta_kubernetes_pod_label_app]
      #       action: keep
      #       regex: cadvisor
      #     - action: labelmap
      #       regex: __meta_kubernetes_pod_label_(.+)
      #     - source_labels: [__meta_kubernetes_namespace]
      #       action: replace
      #       target_label: namespace
      #     - source_labels: [__meta_kubernetes_pod_name]
      #       action: replace
      #       target_label: pod
